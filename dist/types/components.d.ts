/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "./stencil-public-runtime";
import { BodySize, BodyVariant } from "./components/sux-body/interfaces";
import { ButtonSize, ButtonVariant } from "./components/sux-button/interfaces";
import { HeadingSize, HeadingVariant, HeadingWeight } from "./components/sux-heading/interfaces";
export namespace Components {
    interface SuxBody {
        /**
          * Size
         */
        "size": BodySize;
        /**
          * Variant
         */
        "variant": BodyVariant;
    }
    interface SuxButton {
        /**
          * is the button disabled
         */
        "disabled"?: boolean;
        /**
          * optionally pass an icon to display at the end of a button - accepts ui icon names
         */
        "iconEnd"?: 'icon-close' | 'icon-open' | 'icon-info';
        /**
          * optionally pass an icon to display at the start of a button - accepts ui icon names
         */
        "iconStart"?: boolean;
        /**
          * optionally add a sux-loader component to the button, disabling interaction.
         */
        "isLoading"?: boolean;
        /**
          * Applies to the aria-label attribute on the button or hyperlink
         */
        "label": string;
        /**
          * The name attribute to apply to the button
         */
        "name"?: string;
        /**
          * Is quiet makes the button appear with least prominence.
         */
        "quiet": boolean;
        /**
          * specify the size of the button, defaults to m
         */
        "size": ButtonSize;
        /**
          * The type attribute to apply to the button
         */
        "type"?: string;
        /**
          * specify the appearance style of the button, defaults to solid.
         */
        "variant": ButtonVariant;
    }
    interface SuxHeading {
        /**
          * Heading  size
         */
        "size": HeadingSize;
        /**
          * Overwrite Tag
         */
        "tag"?: string;
        /**
          * Heading variant
         */
        "variant": HeadingVariant;
        /**
          * Heading weight
         */
        "weight": HeadingWeight;
    }
}
declare global {
    interface HTMLSuxBodyElement extends Components.SuxBody, HTMLStencilElement {
    }
    var HTMLSuxBodyElement: {
        prototype: HTMLSuxBodyElement;
        new (): HTMLSuxBodyElement;
    };
    interface HTMLSuxButtonElement extends Components.SuxButton, HTMLStencilElement {
    }
    var HTMLSuxButtonElement: {
        prototype: HTMLSuxButtonElement;
        new (): HTMLSuxButtonElement;
    };
    interface HTMLSuxHeadingElement extends Components.SuxHeading, HTMLStencilElement {
    }
    var HTMLSuxHeadingElement: {
        prototype: HTMLSuxHeadingElement;
        new (): HTMLSuxHeadingElement;
    };
    interface HTMLElementTagNameMap {
        "sux-body": HTMLSuxBodyElement;
        "sux-button": HTMLSuxButtonElement;
        "sux-heading": HTMLSuxHeadingElement;
    }
}
declare namespace LocalJSX {
    interface SuxBody {
        /**
          * Size
         */
        "size"?: BodySize;
        /**
          * Variant
         */
        "variant"?: BodyVariant;
    }
    interface SuxButton {
        /**
          * is the button disabled
         */
        "disabled"?: boolean;
        /**
          * optionally pass an icon to display at the end of a button - accepts ui icon names
         */
        "iconEnd"?: 'icon-close' | 'icon-open' | 'icon-info';
        /**
          * optionally pass an icon to display at the start of a button - accepts ui icon names
         */
        "iconStart"?: boolean;
        /**
          * optionally add a sux-loader component to the button, disabling interaction.
         */
        "isLoading"?: boolean;
        /**
          * Applies to the aria-label attribute on the button or hyperlink
         */
        "label"?: string;
        /**
          * The name attribute to apply to the button
         */
        "name"?: string;
        /**
          * Is quiet makes the button appear with least prominence.
         */
        "quiet"?: boolean;
        /**
          * specify the size of the button, defaults to m
         */
        "size"?: ButtonSize;
        /**
          * The type attribute to apply to the button
         */
        "type"?: string;
        /**
          * specify the appearance style of the button, defaults to solid.
         */
        "variant"?: ButtonVariant;
    }
    interface SuxHeading {
        /**
          * Heading  size
         */
        "size"?: HeadingSize;
        /**
          * Overwrite Tag
         */
        "tag"?: string;
        /**
          * Heading variant
         */
        "variant"?: HeadingVariant;
        /**
          * Heading weight
         */
        "weight"?: HeadingWeight;
    }
    interface IntrinsicElements {
        "sux-body": SuxBody;
        "sux-button": SuxButton;
        "sux-heading": SuxHeading;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "sux-body": LocalJSX.SuxBody & JSXBase.HTMLAttributes<HTMLSuxBodyElement>;
            "sux-button": LocalJSX.SuxButton & JSXBase.HTMLAttributes<HTMLSuxButtonElement>;
            "sux-heading": LocalJSX.SuxHeading & JSXBase.HTMLAttributes<HTMLSuxHeadingElement>;
        }
    }
}
